<!--
================================================================================================================
================================================================================================================
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.eharmony</groupId>
    <artifactId>aloha</artifactId>
    <version>2.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>${project.artifactId}</name>

    <!-- TODO: Fill these in: -->

    <organization>
        <name>eHarmony</name>
        <url>http://eharmony.com</url>
    </organization>

    <description>Scala-based machine learning library with generic models and lazily created features.</description>
    <inceptionYear>2013</inceptionYear>

    <distributionManagement>
        <site>
            <id>${site.deploy.id}</id>
            <name>Deployment through GitHub's site deployment plugin</name>
            <url>${site.deploy.url}</url>
        </site>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <licenses>
        <!--
            To see infectiousness of licenses of dependencies, look at the licenses in mvn clean site and then
            analyze using the following flowchart:  http://www.dwheeler.com/essays/floss-license-slide.html
        -->
        <license>
            <name>MIT License</name>
            <url>http://opensource.org/licenses/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <modules>
        <module>aloha-core</module>
        <module>aloha-vw-jni</module>
        <module>aloha-cli</module>
    </modules>

    <developers>
        <developer>
            <id>ryan</id>
            <name>Ryan Deak</name>
            <email>RyanDeak@eharmony.com</email>
            <organization>eHarmony</organization>
            <organizationUrl>http://www.eharmony.com</organizationUrl>
            <roles>
                <role>creator</role>
                <role>developer</role>
            </roles>
            <timezone>-7</timezone>
        </developer>
    </developers>

    <properties>
        <maven.compiler.source>1.6</maven.compiler.source>
        <maven.compiler.target>1.6</maven.compiler.target>
        <encoding>UTF-8</encoding>
        <java.version>1.6</java.version>
        <scala.version>2.10.5</scala.version>
        <scala.major.version>2.10</scala.major.version>
        <spray.json.version>1.3.1</spray.json.version>
        <scalaz.version>7.0.0</scalaz.version>
        <slf4j.version>1.7.10</slf4j.version>

        <!--
        Use zinc scala compilation server for scala compilation.  This defaults to false.  The reason the default
        is false because when zinc is not running, the scala-maven-plugin throws an NPE.  This can be overridden
        on the command line by doing:

            mvn test -Dcompile=incremental
        -->
        <compile>all</compile>

        <generated.classes.test>${project.build.directory}/test-classes/generated</generated.classes.test>

        <!-- Site related properties -->
        <site.url>http://eharmony.github.io/aloha</site.url>
        <github.global.server>github</github.global.server>
        <site.deploy.id>gh-pages</site.deploy.id>
        <site.deploy.url />

        <repositoryOwner>eharmony</repositoryOwner>
        <repositoryName>aloha</repositoryName>
    </properties>

    <url>${site.url}</url>

    <scm>
        <connection>scm:git:git@github.com:eharmony/aloha.git</connection>
        <developerConnection>scm:git:git@github.com:eharmony/aloha.git</developerConnection>
        <url>git@github.com:eharmony/aloha.git</url>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>http://github.com/eharmony/aloha/issues</url>
    </issueManagement>

    <dependencyManagement>
        <dependencies>

            <!-- Language deps -->
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>

            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-reflect</artifactId>
                <version>${scala.version}</version>
            </dependency>

            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-compiler</artifactId>
                <version>${scala.version}</version>
            </dependency>

            <!-- ScalaZ language extensions: Type classes, etc. -->
            <dependency>
                <groupId>org.scalaz</groupId>
                <artifactId>scalaz-core_${scala.major.version}</artifactId>
                <version>${scalaz.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.scala-lang</groupId>
                        <artifactId>scala-library</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.github.scopt</groupId>
                <artifactId>scopt_${scala.major.version}</artifactId>
                <version>3.3.0</version>
            </dependency>

            <dependency>
                <groupId>io.spray</groupId>
                <artifactId>spray-json_${scala.major.version}</artifactId>
                <version>${spray.json.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.scala-lang</groupId>
                        <artifactId>scala-library</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.10</version>
            </dependency>

            <!-- File System deps -->
            <dependency>
                <groupId>commons-vfs</groupId>
                <artifactId>commons-vfs</artifactId>
                <version>1.0</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-vfs2</artifactId>
                <version>2.0</version>
                <exclusions>
                    <!--
                    Remove unnecessary SCM dependencies.  This was done under ticket VFS-395.  Do it here but include
                    2.0 artifact.  For more information, see:

                    https://issues.apache.org/jira/browse/VFS-395

                    Or check out and inspect vfs.

                      > svn co http://svn.apache.org/repos/asf/commons/proper/vfs/trunk vfs
                      > cd vfs && grep -rn 'scm' .
                    ./.svn/pristine/81/816321bb6e7edee107e3e75eeaade5719b513953.svn-base:339:  [POM] Remove maven-scm-* dependencies.
                    -->
                    <exclusion>
                        <groupId>org.apache.maven.scm</groupId>
                        <artifactId>maven-scm-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.maven.scm</groupId>
                        <artifactId>maven-scm-provider-svnexe</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.0.1</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.2</version>
            </dependency>


            <!-- commons-vfs (1) requires 1.0.4.  Explicitly excluded commons-logging.  -->
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>1.1.1</version>
            </dependency>

            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>


            <!-- Testing deps -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.5</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>

                <!-- Java compilation.  Currently just for tests. -->
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.0.2</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                        <compilerVersion>${maven.compiler.target}</compilerVersion>
                    </configuration>
                    <executions>
                        <execution>
                            <id>java-compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>java-test-compile</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.13</version>
                    <executions>
                        <execution>
                            <id>surefire-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>test</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <redirectTestOutputToFile>true</redirectTestOutputToFile>
                        <includes>
                            <include>**/*Test.java</include>
                            <include>**/*Test.scala</include>
                        </includes>
                        <forkMode>once</forkMode>
                    </configuration>
                </plugin>

                <!-- TODO: Figure out how to configure for multi-module build. -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5</version>
                    <configuration>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <useReleaseProfile>false</useReleaseProfile>
                        <releaseProfiles>release</releaseProfiles>
                        <goals>deploy</goals>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.scm</groupId>
                            <artifactId>maven-scm-provider-gitexe</artifactId>
                            <version>1.3</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.4</version>
                    <executions>
                        <execution>
                            <id>enforce</id>
                            <configuration>
                                <rules>
                                    <requireUpperBoundDeps>
                                        <uniqueVersions>true</uniqueVersions>
                                    </requireUpperBoundDeps>
                                    <banDuplicateClasses>
                                        <ignoreClasses />
                                        <findAllDuplicates>true</findAllDuplicates>
                                    </banDuplicateClasses>
                                </rules>
                            </configuration>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>extra-enforcer-rules</artifactId>
                            <version>1.0-alpha-3</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>1.6.5</version>
                    <extensions>true</extensions>
                    <configuration>
                        <serverId>ossrh</serverId>
                        <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                        <autoReleaseAfterClose>true</autoReleaseAfterClose>
                    </configuration>
                </plugin>

                <!-- TODO: Enable scalastyle plugin -->
                <!--<plugin>-->
                    <!--<groupId>org.scalastyle</groupId>-->
                    <!--<artifactId>scalastyle-maven-plugin</artifactId>-->
                    <!--<version>0.6.0</version>-->
                    <!--<configuration>-->
                        <!--<verbose>false</verbose>-->
                        <!--<failOnViolation>true</failOnViolation>-->
                        <!--<includeTestSourceDirectory>true</includeTestSourceDirectory>-->
                        <!--<failOnWarning>false</failOnWarning>-->
                        <!--<sourceDirectory>${basedir}/src/main/scala</sourceDirectory>-->
                        <!--<testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>-->
                        <!--<configLocation>${basedir}/lib/scalastyle_config.xml</configLocation>-->
                        <!--<outputFile>${project.basedir}/scalastyle-output.xml</outputFile>-->
                        <!--<outputEncoding>UTF-8</outputEncoding>-->
                    <!--</configuration>-->
                    <!--<executions>-->
                        <!--<execution>-->
                            <!--<goals>-->
                                <!--<goal>check</goal>-->
                            <!--</goals>-->
                        <!--</execution>-->
                    <!--</executions>-->
                <!--</plugin>-->
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <!-- http://minds.coremedia.com/2012/09/11/problem-solved-deploy-multi-module-maven-project-site-as-github-pages/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.4</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.doxia</groupId>
                        <artifactId>doxia-module-markdown</artifactId>
                        <version>1.6</version>
                    </dependency>

                    <!-- For Reflow skin -->
                    <dependency>
                        <groupId>lt.velykis.maven.skins</groupId>
                        <artifactId>reflow-velocity-tools</artifactId>
                        <version>1.1.1</version>
                    </dependency>
                    <!-- Reflow skin requires Velocity >= 1.7  -->
                    <dependency>
                        <groupId>org.apache.velocity</groupId>
                        <artifactId>velocity</artifactId>
                        <version>1.7</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <skipDeploy>true</skipDeploy>
                </configuration>
            </plugin>

            <plugin>
                <!-- GitHub site plug-in for deployment to GitHub pages -->
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.9</version>
                <configuration>
                    <message>Creating site for ${project.artifactId}, ${project.version}</message>
                    <!-- this does the trick to place every module in the correct subfolder -->
                    <path>${project.distributionManagement.site.url}</path>
                    <merge>true</merge>
                </configuration>
                <executions>
                    <execution>
                        <id>github-site</id>
                        <goals>
                            <goal>site</goal>
                        </goals>
                        <phase>site-deploy</phase>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <anonymousConnection>scm:git:git@github.com:eharmony/aloha.git</anonymousConnection>
                    <developerConnection>scm:git:git@github.com:eharmony/aloha.git</developerConnection>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>summary</report>
                            <report>license</report>
                            <report>modules</report>
                            <report>project-team</report>
                            <report>scm</report>
                            <report>issue-tracking</report>
                            <report>dependencies</report>
                            <report>dependency-convergence</report>
                            <report>plugins</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <!--
                Trick to differentiate maven 2.x and maven 3.x.

                This employs that the basedir expression is only recognized by Maven 3.x (see MNG-2363)

                http://maven.apache.org/plugins/maven-site-plugin/maven-3.html#\
                Using_maven-site-plugin_2.x_with_Maven_2_and_maven-site-plugin_3.x_with_Maven_3
            -->
            <id>maven-2</id>
            <activation>
                <file>
                    <missing>${basedir}</missing>
                </file>
            </activation>

            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.scala-tools</groupId>
                            <artifactId>maven-scala-plugin</artifactId>
                            <version>2.15.2</version>
                            <configuration>
                                <scalaVersion>${scala.version}</scalaVersion>
                                <displayCmd>true</displayCmd>
                                <verbose>true</verbose>
                                <failOnMultipleScalaVersions>true</failOnMultipleScalaVersions>
                                <args>
                                    <arg>-target:jvm-${java.version}</arg>
                                    <arg>-feature</arg>
                                    <arg>-deprecation</arg>
                                    <arg>-Ycheck:jvm</arg>
                                    <arg>-Ywarn-all</arg>
                                    <arg>-unchecked</arg>
                                </args>
                                <jvmArgs>
                                </jvmArgs>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.scala-tools</groupId>
                        <artifactId>maven-scala-plugin</artifactId>
                        <executions>
                            <execution>
                                <!--
                                Normal compile phase because there is no java in the src/main directory.  If there was a
                                java subdirectory, then change the phase to process-resources.  Additionally, might need to
                                add the goal add-source.
                                -->
                                <id>scala-compile</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                    <goal>compile</goal>
                                </goals>
                            </execution>

                            <!-- Maven Phase is changed here because we have mixed java / scala in the test directory. -->
                            <execution>
                                <id>scala-test-compile</id>
                                <phase>process-test-resources</phase>
                                <goals><goal>testCompile</goal></goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.scala-tools</groupId>
                        <artifactId>maven-scala-plugin</artifactId>
                        <version>2.15.2</version>
                    </plugin>
                </plugins>
            </reporting>
        </profile>

        <profile>
            <!--
                Trick to differentiate maven 2.x and maven 3.x.

                This employs that the basedir expression is only recognized by Maven 3.x (see MNG-2363)

                http://maven.apache.org/plugins/maven-site-plugin/maven-3.html#\
                Using_maven-site-plugin_2.x_with_Maven_2_and_maven-site-plugin_3.x_with_Maven_3
            -->
            <id>maven-3</id>
            <activation>
                <file>
                    <exists>${basedir}</exists>
                </file>
            </activation>

            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <!-- see http://davidb.github.com/scala-maven-plugin -->

                            <!--
                                 # Use zinc for incremental compilation: See http://typesafe.com/blog/zinc-and-incremental-compilation

                                 *************** INSTALLING ZINC ***************

                                 On OS X, use brew:
                                 brew install zinc

                                 ZINC_VERSION=0.3.7
                                 curl "http://repo.typesafe.com/typesafe/zinc/com/typesafe/zinc/dist/0.2.5/zinc-${ZINC_VERSION}.tgz" > zinc-${ZINC_VERSION}.tgz
                                 tar -zxvf zinc-${ZINC_VERSION}.tgz
                                 sudo mkdir -p /usr/share/java 2>/dev/null
                                 sudo mv zinc-${ZINC_VERSION} /usr/share/java/zinc-${ZINC_VERSION}
                                 cd /usr/share/java
                                 sudo ln -s zinc-${ZINC_VERSION} zinc
                                 cd /usr/local/bin
                                 sudo ln -s /usr/share/java/zinc/bin/zinc zinc


                                 *************** RUNNING ZINC ***************

                                 zinc -start -nailed
                              -->

                            <groupId>net.alchim31.maven</groupId>
                            <artifactId>scala-maven-plugin</artifactId>
                            <version>3.2.0</version>
                            <configuration>
                                <recompileMode>${compile}</recompileMode>
                                <useZincServer>true</useZincServer>
                                <scalaVersion>${scala.version}</scalaVersion>
                                <displayCmd>true</displayCmd>
                                <verbose>true</verbose>
                                <failOnMultipleScalaVersions>true</failOnMultipleScalaVersions>
                                <args>
                                    <arg>-target:jvm-${java.version}</arg>
                                    <arg>-feature</arg>
                                    <arg>-deprecation</arg>
                                    <arg>-Ycheck:jvm</arg>
                                    <arg>-Ywarn-all</arg>
                                    <arg>-unchecked</arg>
                                </args>
                                <jvmArgs>
                                </jvmArgs>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>net.alchim31.maven</groupId>
                        <artifactId>scala-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>scala-compile</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                    <goal>compile</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>scala-test-compile</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>testCompile</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>attach-javadocs</id>
                                <!-- TODO: Figure out how to change the jar name -->
                                <goals><goal>doc-jar</goal></goals>
                                <configuration>
                                    <includes>
                                        <include>**eharmony/aloha/**</include>
                                    </includes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>net.alchim31.maven</groupId>
                        <artifactId>scala-maven-plugin</artifactId>
                        <version>3.1.5</version>
                    </plugin>
                </plugins>
            </reporting>
        </profile>

        <profile>
            <id>stage</id>
            <properties>
                <site.deploy.url>http://github.com/eharmony/aloha/tree/gh-pages/</site.deploy.url>
            </properties>

            <build>
                <plugins>
                    <!-- Configure Maven site plugin to perform stage -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <version>3.3</version>
                        <executions>
                            <execution>
                                <id>stage</id>
                                <goals>
                                    <goal>stage</goal>
                                </goals>
                                <phase>site</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>release</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-source-plugin</artifactId>
                            <version>2.1.2</version>
                            <executions>
                                <execution>
                                    <id>attach-sources</id>
                                    <goals>
                                        <goal>jar</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-gpg-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>sign-artifacts</id>
                                    <phase>verify</phase>
                                    <goals>
                                        <goal>sign</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
